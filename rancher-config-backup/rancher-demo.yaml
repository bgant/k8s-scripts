apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-zmzvw
    field.cattle.io/publicEndpoints: '[{"addresses":["192.168.7.201"],"port":80,"protocol":"TCP","serviceName":"default:rancher-demo-loadbalancer","allNodes":false}]'
  creationTimestamp: "2020-02-20T20:18:23Z"
  generation: 3
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-rancher-demo
  name: rancher-demo
  namespace: default
  resourceVersion: "5350"
  selfLink: /apis/apps/v1/namespaces/default/deployments/rancher-demo
  uid: 5ada8784-28c8-437e-95f4-fb613a6e60c5
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-rancher-demo
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-02-20T20:16:20Z"
        field.cattle.io/ports: '[[{"containerPort":8080,"dnsName":"rancher-demo-loadbalancer","hostPort":0,"kind":"LoadBalancer","name":"8080tcp803","protocol":"TCP","sourcePort":80}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-rancher-demo
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - env:
        - name: COW_COLOR
          value: purple
        image: monachus/rancher-demo
        imagePullPolicy: Always
        name: rancher-demo
        ports:
        - containerPort: 8080
          name: 8080tcp803
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2020-02-20T20:19:16Z"
    lastUpdateTime: "2020-02-20T20:19:16Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-02-20T20:18:24Z"
    lastUpdateTime: "2020-02-20T20:19:16Z"
    message: ReplicaSet "rancher-demo-b9dcd9c4f" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
