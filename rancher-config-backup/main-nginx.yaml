apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
    field.cattle.io/creatorId: user-zmzvw
    field.cattle.io/publicEndpoints: '[{"addresses":["192.168.7.225"],"port":80,"protocol":"TCP","serviceName":"default:main-nginx-loadbalancer","allNodes":false},{"addresses":["192.168.7.225"],"port":443,"protocol":"TCP","serviceName":"default:main-nginx-loadbalancer","allNodes":false}]'
  creationTimestamp: "2020-02-20T21:15:31Z"
  generation: 16
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-main-nginx
  name: main-nginx
  namespace: default
  resourceVersion: "205258"
  selfLink: /apis/apps/v1/namespaces/default/deployments/main-nginx
  uid: ea5a683b-43e8-47be-bc0b-b72b9f01f593
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-main-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-02-20T21:50:12Z"
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"main-nginx","hostPort":0,"kind":"ClusterIP","name":"80tcp02","protocol":"TCP","sourcePort":0},{"containerPort":443,"dnsName":"main-nginx","hostPort":0,"kind":"ClusterIP","name":"443tcp02","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-main-nginx
    spec:
      containers:
      - image: registry.localdomain:5000/main-nginx:2020-02-20c
        imagePullPolicy: Always
        name: main-nginx
        ports:
        - containerPort: 80
          name: 80tcp02
          protocol: TCP
        - containerPort: 443
          name: 443tcp02
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /etc/letsencrypt
          name: letsencrypt-pvc
          readOnly: true
        - mountPath: /var/lib/nginx/html/
          name: index-configmap
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: letsencrypt-pvc
        persistentVolumeClaim:
          claimName: letsencrypt
      - configMap:
          defaultMode: 292
          name: main-nginx-index
          optional: false
        name: index-configmap
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-02-20T21:15:31Z"
    lastUpdateTime: "2020-02-20T21:52:45Z"
    message: ReplicaSet "main-nginx-fcf5789f7" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-02-21T17:08:17Z"
    lastUpdateTime: "2020-02-21T17:08:17Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 16
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
